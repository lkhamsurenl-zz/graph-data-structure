{
    "metros": [
        {
            "code": "173", 
            "lifeAfter": "CS 173 is the gateway to all higher level CS and ECE tech-electives. Content seen in CS 173 will be reviewed again and again for most ECE/CS tech-electives.CS 225(Data Structures) can be taken afterwards, if not taken concurrently. For students who enjoy CS theory, consider CS 373 (Theory of Computation) and CS 473 (Fundamental Algorithms), which both build on the fundamentals introduced in CS 173.",
            "work": "Discrete Structures is a very straightforward class but it is very easy to fall behind at the end of the semester. The mini-HW's are usually not too hard, but it's good to check answers with other students. The long-form HW's are more difficult, but still doable. The examlets usually consists of one large proof-like problem and other smaller problems. These pretty straightforward, and as long as you pay attention in class and do the HW you should be mostly fine. Be careful, however: the examlets sometimes simply ask you to write down definitions, so make sure to learn definitions as well. Reading the textbook will be more than enough to keep up with the class. Some parts, like trees and relations may seem really straightforward but students should always just try and keep up with the class since there are some concepts are the very, very difficult, like graph theory, sets of sets, functions, and counting.There is also a textbook available for the class (which I highly recommend reading), and it is very helpful in explaining the concepts but is not specifically required to do well in the course. I found the discussion section extremely helpful in clearing up confusing concepts and doing practice problems. Overall, Discrete Structures covers a lot of material but is given at a very good pace with a lot of support from the staff. Students should just try and keep up with the material and everything should be fine."
        }, 
        {
            "code": "465", 
            "lifeAfter": "The class gives students a good understanding of how user interfaces are designed; students are trained to understands how applications are designed from beginning to end. Unfortunately, there are no other user interface design courses.", 
            "work": "There is one midterm and one final exam for the course. The exams are based on the assigned readings and lectures. The style of the exams are more like general education courses with definitions and short answer questions (almost no equations)."
        }, 
        {
            "code": "446", 
            "lifeAfter": "What classes/jobs does this class prepare you for?  I.e. what is this class a prerequisite for?  What would someone who likes this class be interested in?  Please link course numbers to the corresponding DEN pages when possible.", 
            "work": "Workload what do you spend your time on in this class?  About how many hours per week is the homework/labs/mps?  How many tests are there?"
        }, 
        {
            "code": "225", 
            "lifeAfter": "As mentioned earlier, CS 225 is a prerequisite to many higher level ECE and CS courses, such as CS 418 (Interactive Computer Graphics) and ECE 448 (Artificial Intelligence). In addition to this academic aspect, there's a real-world benefit as well: students looking towards software development as a possible career will find that the concepts learned from this class will help greatly in competing for internships in this field.",
            "work": "Students who enjoy programming will love CS 225. The majority of the workload for the class is contained in the form of usually 7 MPs. 2-3 weeks are given for each MP. Many of the MPs are really cool, such as compressing an image using a quadtree or building a random maze and then solving it. Students who start early and work at a steady pace will find doing the MPs to be pretty fun. There is also a lab section for this course, and in recent semesters the lab assignments have been mandatory.  Usually the labs focus on concepts from lecture such as trees, recursion and parallelism. Labs are graded but solutions are provided too. Overall, this course requires a fairly large weekly time commitment in relation to other courses in the ECE curriculum.  The class also has 2 midterms and a final - the midterms tend to focus more on understanding and writing code, while the final has a bit less code and focuses a bit more on big-O performance of the algorithms you've learned in class."
        },
        {
            "code": "357",
            "lifeAfter": "This course is an overview of numerical methods to solve complex mathematical problems. This is particularly useful to solve many kinds of problems in engineering, and it is a suggested non-ECE tech elective for those students interested in areas so diverse as Power or Microelectronics, as well as Computing Systems. Many students will be involved in numerical computing to some extent, regardless of which area one is focused on. This course is also a prerequisite for CS 457 (Numerical Methods II).",
            "work": "The workload is not very heavy compared to the average ECE course. The are no labs on this course, and the format of the class is the classic lecture. There are weekly homework assignments, which should not take a long time to solve if you have access to the course materials (either class-notes and/or textbook). It is helpful to have some experience with MATLAB, because it will allow you to solve homework problems faster. In case you don't, professors usually offer a MATLAB tutorial by the beginning of the semester. There are two midterm exams and one final, which make up most of the grade. These exams are closed book, closed notes, and no calculator is allowed. You are supposed to demonstrate knowledge of the fundamental methods studied, but there are no hard computations - many of the questions on the tests are multiple-choice. In recent semesters there have also been several projects throughout the semester which can be done within a group of three to four people."
        },
        {
            "code": "411", 
            "lifeAfter": "Though this course focuses primarily on relational databases, it briefly covers NoSQL, and many real world applications use NoSQL databases. CS 425 (ECE 428) Distributed Systems covers some of the considerations when implementing a NoSQL database. On occasion, there is a CS 498 Special Topics course on Web Programming that also covers NoSQL topics.",
            "work": "Data driven websites are everywhere. Having experience with SQL, relational databases, and the practical web programming done in the semester long project opens up a lot of practical opportunities in industry. The project can be extremely beneficial for learning other practical topics, like data scraping and UI design as well."
        },
        {
            "code":"418",
            "lifeAfter":"Students who are interested in continuing in computer graphics after this course should take CS 419 (Production Computer Graphics), which builds upon the knowledge learned in CS 418.  Students interested in learning more about programming graphics cards may be interested in ECE 408, which teaches CUDA, a language which enables general-purpose parallel computations on graphics cards.",
            "work":"This class has 4 different MPs, each designed to demonstrate mastery of the topics described above.  Students get a few weeks to do each MP, which is usually plenty of time to finish.  The best part is that when students finish each MP, they end up with a really nice graphic that would be great as part of a portfolio to show off to future employers.  The class also has a 2-3 written exams over the course of the semester, which test overall understanding of the topics and techniques discussed in class.  For an MP-based technical elective, this course is not overly time consuming."
        },
        {
            "code":"421",
            "lifeAfter":"This class is a useful look into salient compiler concepts and will likely expose students to useful ﻿programming techniques; while many students may not need to implement full compilers in the future, lexing and parsing knowledge can be applied to many situations where the given representation of program input is not convenient for internal use.  This class can be followed up by CS 426 Compiler Construction, which deals with the compilation process in more depth and introduces the concept of compiler optimization.",
            "work":"In Spring 2013, the class was broken up into 12 different assignments, 10 of which were MPs in OCaml and 2 of which were written assignments.  Each assignment was relatively short, often requiring less than 100 lines of OCaml code, and took from 3-8 hours to complete.  Assignments were assigned roughly weekly.  The class also had two 75-minute midterm exams and one final, which was cumulative in the Spring 2013 semester."
        },
        {
            "code":"423",
            "lifeAfter":"If you liked this course, consider a career in operating systems. Apart from your standard OS jobs with Apple and Microsoft, with the shift to cloud computing, there are plenty of emerging opportunities in distributed computing, virtualization, etc.\nInterested students should consider taking additional courses in the field, such as CS 425 (Distributed Systems) and CS 523 (Advanced Operating Systems) ‒ though students should note that CS 523 is a graduate level course and cannot be taken for Tech Elective credit without permission from the ECE department.",
            "work":"The workload for CS 423 varies. There are one or two homework assignments during the semester, each requiring about 5-6 hours to complete. MP's are assigned on a monthly basis, totaling 4 MP's – each requiring about 15 to 20 hours of time, working in groups of two or three.  The MPs given vary by professor.  Professor Nahrstedt's MP's one semester were: \nMP 1: Intro to kernel programming - implementing linked lists in the kernel, initialize proc entries, set reading and writing buffers for files, etc. \nMP 2: implementing a real-time scheduler in the kernel.\nMP 3: Implementing a CPU utilization profiler; this involved some work with paging, as info had to be written by the kernel and read by user space.\nMP 4: distributed systems - running multiple instance of a Java or C++ program and load-balancing work over the network to complete the task as quickly as possible.\nThere is one midterm and, of course, one final exam."
        },
        {
            "code":"425",
            "lifeAfter":"Students who enjoy this class may want to consider CS 438 (Communication Networks). This course prepares students to design distributed systems such as peer-to-peer networks or cloud-style services, so this class is great preparation for working on internet or cloud applications.",
            "work":"The lectures tend to move pretty fast and cover a lot of material. The class has a single midterm and a final; as such, it is necessary to review a good deal before both tests. The class also has several homeworks and 2 or 3 MPs. The homeworks are not given very often, and often will necessitate a bit of review, but otherwise are not too hard. The MPs is where a good portion of the work for the class comes in. MPs are done in groups of 2, so finding a good partner is a great asset. The MPs usually take about a month, and are on topics such as reliable, causally-ordered multicast and distributed hash tables. The MPs require a bit of socket programming and some understanding of the basic OS utilities such as how processes work and how to use system calls (especially fork()). The overall workload for the class varies based on whether there is currently an MP - the workload is pretty light when there is no MP going on, but MPs take a serious amount of time.  Unlike earlier classes such as CS 225 and ECE 190, MPs require careful planning and cannot be implemented in a few nights.\nThe MPs had a bit of an overhaul in Fall 2012 when Professor Gupta taught the class again. The professors all borrow MPs from one another so the same set of MPs may be reused. Rather than having separate MPs and tight specifications, the MPs built on each other to create a distributed processing framework similar to Hadoop. Any languages were allowed, so if you and a partner can agree on a high-level language you can avoid dealing with very low-level details (there were groups using C/C++, Java, Python and Go in Fall 2012). However, falling behind early on would make later MPs more difficult; while code was released for an MP when it was over, it's much easier to understand your own system than someone else's. This organization makes the MPs more challenging but also very rewarding, and gives a good sense of the challenges associated with working in distributed systems."
        },
        {
            "code": "433", 
            "lifeAfter": "This class has no benefits over ECE 411 unless a student is an EE and wants the knowledge of ECE 411 but not the lab component. good number of graduate students tend to take the class, likely continuing on to CS 533, also taught by Professor Adve.",
            "work": "There are 7-8 homework assignments each semester, depending on how quickly material is covered in class, and each should take 3-5 hours. 0All information required for the homework is available from lecture; the book isn't necessary. As long as students attend lectures and do the homework, only a moderate review should be necessary before the midterm and non-cumulative final."
        },
        {
            "code":"438",
            "lifeAfter":"Students who enjoy this class might also like CS 425 (Distributed Systems), which discusses applications that can be built on top of networks.  For those interested in Wireless Networks, ECE 439 (CS 439) is the logical next step.  Additionally, one could choose to continue studying networking at the graduate level, with classes such as CS 538 (Advanced Computer Networks), CS 525 (Advanced Distributed Systems), and ECE 567 (Communication Network Analysis).  Students interested in security should consider CS 460 (Security Laboratory), CS 461 (Computer Security I) and CS 463 (Computer Security II).",
            "work":"The workload for this class may vary depending on the professor; when taught by Robin Kravets in Spring 2012, this class had a very substantial workload for a technical elective.  The class has both homework assignments and MPs.  In recent semesters, there have been 4 homeworks - approximately one a month.  Each assignment is fairly long, covering a lot of material and often taking 10+ hours each to complete, mainly because of their length and breadth.  Additionally, there are typically a few MPs in this class; in Spring 2012, there were 3: the first MP was implementing a simple Google Talk client, leveraging existing libraries; the second MP was the most complicated, in which students had to implement their own distributed routing protocol which ran in a simulated network.  The third and final MP required reliably transferring a file, which essentially involved implementing a TCP-like protocol.  The second and third MPs are typicallywere done in pairs, but for the second MP each student had to write their own routing protocol, and only shared code for the network simulation.\nThe class has a midterm and a final.  The difficulty of the exams will depend on the instructor, but given the sheer amount of material covered, it is easy to spend a lot of time studying for the exams, especially for the final. The book for the class covers everything found in lecture and more, but it is advisable to use lecture slides & homeworks for review since the book is not a quick read."
        },
        {
            "code": "431", 
            "lifeAfter": "The logical sequel is CS 424 (Real-Time Systems), also taught by Prof. Sha If you enjoy this field, there are many career options open to you after graduation.",
            "work": "The class has a single midterm and a final; be sure to review before both tests. In addition, there are about four homeworks (each of which can probably be done in about three hours) and weekly labs. The lab and lecture work together quite nicely; if you come to lab prepared, you should get the project done easily within the two-hour lab period."
        },
        {
            "code":"440",
            "lifeAfter":"Students wishing to continue along with AI topics may wish to take CS 446 (Machine Learning), Computer Vision (CS 543 & CS 544), Natural Language Processing (CS 498 Special Topic & CS 546).",
            "work":"Workload will vary depending on which professor you have.  DeJong gives biweekly written homework assignments that have the occasional programming problem.  Lazebnik's class consists of 4 MPs (including a Maze Solver and a Character Recognition System), and some extra credit, a reasonable workload for a tech elective.  Amir's assignments were a combination of written problems and some programming problems which were basically MPs in their own right - a rather difficult and extremely time-intensive workload.  Additionally, all the professors gave 1 midterm and a final exam."
        },
        {
            "code":"450",
            "lifeAfter":"As mentioned before, there are really no undergraduate courses that directly follow CS 450.  However, grad students and interested undergrads who want to dive further into numerics can take one of CS 554: Parallel Numerical Algorithms, CS 555: Numerical Methods for PDEs, CS 556: Iterative and Multigrid Methods, or CS 558: Topics in Numerical Analysis.  Most students who take CS 450 will probably not take these advanced courses, but many will be involved in jobs or research that uses scientific computing in some fashion - anything from simulating rockets at NASA to designing algorithms for high-speed trading on Wall Street.",
            "work":"CS 450 has 7 homeworks that are assigned approximately every-other week.  Each of these homeworks will have a handful of problems, and most of the problems involve the implementation and analysis of algorithms and concepts presented in class (either in Matlab or Python, depending on the instructor).  The homeworks can require some thought, but they will not take too much of one's time.  The class has two exams (an in-class midterm and a final), along with about 8 ten-minute quizzes that are given at the end of each chapter.  All exams and quizzes are multiple choice and test a students conceptual and mechanical understanding of the ideas presented in class.  They do not require a lot of messy math (that's what we have computers for, and why people take this class).  In general, the homeworks will not be a huge burden, but students will spend a good amount of time reviewing material from lectures."
        },
        {
            "code":"460",
            "lifeAfter":"If you really enjoyed this course, consider a career in Cyber Security. The course develops skills for a variety of fields, such as IT, Cyber Security, Malware Analysis, and even Penetration Testing/Red Teaming. The CS department has offered a section of CS 498 as Malware Analysis, which dives deep into topics of Reverse Engineering. Check the Special Topics listing in the CS course catalog for relevant courses.\nConsider applying for internships at places such as Raytheon, MIT Lincoln Labs, Sandia National Labs, MITRE and many government agencies (NSA, FBI, DHS). Also, research in this area is highly valued and available for Undergraduate and Graduate Students within the Information Trust Institute at UIUC.",
            "work":"This is the more involved class of the Security track (CS 461 (Computer Security I), CS 463 (Computer Security II), CS 460 (Security Lab)). As the course progresses, the workload increases. The simpler labs can take as little as 5-10 hours of work, but the more complicated ones can take much longer. Expect to spend at least 15-20 hours on the final project/competition per person.  As a lab course, the workload is comparable to ECE 385 (Digital Systems Laboratory)."
        },
        {
            "code":"461",
            "lifeAfter":"Students who enjoy this course may be interested in a career in Computer Security. If so, the next course in the curriculum, CS 463 (Computer Security II), introduces students to more advanced security concepts. Those interested in practicing and implementing what was learned in CS 461 should consider taking CS 460 - Security Laboratory.",
            "work":"CS 461 is only an introductory course and is not too time consuming for a CS/ECE course. Average time commitment outside class may be 1-3 hours per week, with the amount of homework assigned varying as the semester progresses. The bulk of the course grade comes from the two midterms and a final, which only cover concepts mentioned in lecture. Attending class and paying attention during lecture will go a long way towards getting an A in the course."
        },
        {
            "code":"463",
            "lifeAfter":"If you are interested in Computer Security and if you have already taken Computer Security I and the Computer Security Lab, consider taking CS 563 - Advanced Computer Security. Please keep in mind that this is a graduate level course, and that you will need to seek permission from the ECE department before you can receive Tech Elective credit for this course. There is also plenty of research in Security at the U of I; consider doing undergraduate research.\nWith recent shifts to the cloud and with how everything is becoming digitalized, there is an increasing need for experts in Computer Security. Job openings are on the rise in both the private and public sector.",
            "work":"The class consists of two 90 minute lectures a week. Attendance is mandatory, and points are awarded for student discussion. There are three machine problems.\nThe MP's vary by semester as they depend on the professor and his/her research interests. For the semester of Spring 2013, students were asked to create an application capable of encrypting files using AES-128 and uploading them to a server. The goal of the machine problems was to create an encrypted service that would prevent all unauthorized access to the data, even from the server admin. The first MP was an individual assignment asking students to implement this basic client-server setup. For the second MP, students could work in up to groups of three, and were required to make improvements to the application to allow authorized users to search the files while they were stored on the server. Finally, the third and last MP asked students to minimize leakage about the files; i.e. metadata leakage using the paper published on Searchable Symmetric Encryption (Curtmola, Garay, Kamara, Ostrovsky). \nExpect to spend about 10 hours on the first MP for the entirety of the assignment, but a lot more if you are not familiar with Java and socket programming. The last two MP's are a lot more challenging and may require up to 10 hours of work per teammate per week while they are going on. A good team is essential to these assignments. Lastly, there are no midterms for this class. There is one final exam. "
        },
        {
            "code":"473",
            "lifeAfter":"CS 473 isn't really a prerequisite for any other undergraduate course, but many of the presented topics come up in graduate courses and computer research.  Students who really enjoyed CS 473 might consider taking CS 573, the graduate version where some of the same material is covered, but in much more depth.  Other courses of interest are CS 598CC Approximation Algorithms, & CS 579 Computational Complexity.  Students who enjoyed the the graph theory presented in this course may want to take MATH 412 (Graph Theory) if they want to deal with graph theory in a more traditional sense.",
            "work":"CS 473 comes with a heavy workload, so it is recommended for a student to take this class when they have a decent amount of time to give to it.  This class has weekly homeworks, which can be done and submitted in groups of up to three.  Each homework has three problems that usually involve designing an algorithm to solve a novel problem or doing a related mathematical proof.  These problems are tricky and take quite a bit of thought, but they are very doable for any student who stays current on the course material.  The amount of time spent on homeworks can vary drastically depending on the difficulty of the questions, familiarity with the material, and, most importantly, quality/dedication of your other group members; the more-difficult homeworks can easily take 20-25 hours of time, so having a group to share the work with is essential; the easier assignments tend to be closer to 10-15 hours of work.  It is recommended, though not required, that students typeset their homeworks in LaTeX.\nIn addition, there are weekly quizzes on Moodle that is designed to reinforce more of the 'nut and bolt' concepts presented in the class, while the written homeworks tend to focus on applying the material.  The class has two midterms and a final, and the exams make up the bulk of the course grade.  One additional benefit of the CS 473 homeworks is that students develop a more mature mathematical writing style.  Most students entering CS 473 have not had to write too many proofs or explanations of mathematical processes, and the class gives them an opportunity to hone their skills."
        }
    ]
}